name: monorepo-template
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7
          run_install: false
      - name: pnpm install && pnpm build
        run: |
          pnpm config set sass_binary_site https://npm.taobao.org/mirrors/node-sass/
          pnpm install
          pnpm -F client run client-build
          pnpm -F backend run backend-build
      - name: login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push client
        id: docker_build_client
        uses: docker/build-push-action@v2
        with:
          context: ./client/apps/pkg1
          file: ./client/apps/pkg1/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/client-pkg1:latest
      - name: clear client
        run: | 
          rm -rf client
          rm -rf library
          rm -rf backend/apps
          rm -rf backend/libs
          rm -rf doc
          rm -rf .husky
      - name: Build and push backend
        id: docker_build_backend
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/backend-pkg1:latest
      - name: SSH
        uses: fifsky/ssh-action@master
        with:
          command: |
            docker pull yjj603/client-pkg1:latest
            docker rm -f client-pkg1
            docker run -itd -p 4001:80 --name client-pkg1 yjj603/client-pkg1
            docker pull yjj603/backend-pkg1:latest
            docker rm -f backend-pkg1
            docker run -itd -p 4008:4008 --name backend-pkg1 yjj603/backend-pkg1
            docker image prune -af
          host: ${{ secrets.HOST }}
          user: ${{ secrets.USER }}
          pass: ${{ secrets.USER_PWD }}



